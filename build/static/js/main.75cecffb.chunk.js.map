{"version":3,"sources":["components/Title.js","components/Persons.js","components/Filter.js","components/Form.js","services/addresses.js","App.js","index.js"],"names":["Title","props","title","Persons","persons","map","person","name","number","onClick","deletePerson","Filter","value","newFilter","onChange","handleFilterChange","Form","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","console","log","delete","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","searchPersons","setSearchPersons","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","addressService","className","event","target","searched","filter","toLowerCase","includes","preventDefault","personObject","nameExists","forEach","window","confirm","p","find","setTimeout","concat","i","index","updatedPersons","splice","catch","e","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75cecffb.chunk.js","sourcesContent":["const Title = props => {\n  return <h1>{props.title}</h1>;\n};\n\nexport default Title;\n","const Persons = props => {\n  return props.persons.map(person => {\n    return (\n      <div key={person.name}>\n        {person.name} {person.number} <button onClick={() => props.deletePerson(person)}>delete</button>\n      </div>\n    );\n  });\n};\n\nexport default Persons;\n","const Filter = props => {\n  return (\n    <div>\n      filter shown with <input value={props.newFilter} onChange={props.handleFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","const Form = props => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import axios from 'axios';\nconst baseUrl = 'https://fierce-falls-09193.herokuapp.com/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst deletePerson = id => {\n  console.log('id', id);\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update, deletePerson };\n","import React, { useState, useEffect } from 'react';\nimport Title from './components/Title';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport Form from './components/Form';\nimport addressService from './services/addresses';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [searchPersons, setSearchPersons] = useState(persons);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const getPersons = () => {\n    addressService.getAll().then(response => {\n      setPersons(response);\n      setSearchPersons(response);\n    });\n  };\n\n  useEffect(getPersons, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n    let nameExists = false;\n    persons.forEach(person => {\n      if (person.name === newName) {\n        nameExists = true;\n      }\n    });\n    if (nameExists) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n        const p = persons.find(person => person.name === personObject.name);\n        addressService.update(p.id, personObject);\n        setSuccessMessage(`Updated ${personObject.name}`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 3000);\n      }\n    } else {\n      addressService.create(personObject);\n      setPersons(persons.concat(personObject));\n      setSearchPersons(persons.concat(personObject));\n      setNewName('');\n      setNewNumber('');\n      setNewFilter('');\n      setSuccessMessage(`Added ${personObject.name}`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 3000);\n    }\n  };\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n    let searched = persons.filter(person => {\n      return person.name.toLowerCase().includes(event.target.value.toLowerCase());\n    });\n    setSearchPersons(searched);\n  };\n\n  const deletePerson = person => {\n    console.log(person);\n    if (window.confirm(`Delete ${person.name}`)) {\n      addressService\n        .deletePerson(person.id)\n        .then(response => {\n          let i;\n          persons.forEach((p, index) => {\n            if (p.name === person.name) {\n              i = index;\n            }\n          });\n          let updatedPersons = persons.splice(i, 1);\n          setPersons(updatedPersons);\n        })\n        .catch(e => {\n          setErrorMessage(`Information of ${person.name} has already been removed from the server`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 3000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Title title=\"Phonebook\" />\n      {errorMessage && <div className=\"errorMessage\">{errorMessage}</div>}\n      {successMessage && <div className=\"successMessage\">{successMessage}</div>}\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <Title title=\"add a new\" />\n      <Form\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <Title title=\"Numbers\" />\n      <Persons persons={searchPersons} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}